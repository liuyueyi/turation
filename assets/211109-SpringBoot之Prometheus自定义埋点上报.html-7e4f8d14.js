const e=JSON.parse('{"key":"v-0e91b840","path":"/spring/middle/Prometheus/211109-SpringBoot%E4%B9%8BPrometheus%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%8B%E7%82%B9%E4%B8%8A%E6%8A%A5.html","title":"2.自定义埋点上报","lang":"zh-CN","frontmatter":{"order":2,"title":"2.自定义埋点上报","tag":["Prometheus"],"category":["SpringBoot","中间件","Prometheus"],"date":"2021-11-09T18:44:30.000Z","keywords":["Prometheus","SpringBoot"],"description":"之前介绍了一篇SpringBoot集成Prometheus实现数据上报的博文，在前面一篇博文中，更多的是一个SpringBoot应用如何最小成本的接入Prometheus，并结合Grafana配置一个完整的应用监控大盘 有看过前文的小伙伴可能知晓，SpringBoot接入Prometheus之后，基本上不用做额外的开发，就已经实现了我们关心的JVM情况、GC情况、HTTP调用请求等信息，然而在实际的业务开发过程中，我们总会遇到一些需要手动上报的场景，那么我们可以怎么处理呢？ 本文的核心知识点： 通过一个实例演示SpringBoot应用，如何实现自定义的数据上报 上篇博文: SpringBoot整合Prometheus实现应用监控","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/middle/Prometheus/211109-SpringBoot%E4%B9%8BPrometheus%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%8B%E7%82%B9%E4%B8%8A%E6%8A%A5.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"2.自定义埋点上报"}],["meta",{"property":"og:description","content":"之前介绍了一篇SpringBoot集成Prometheus实现数据上报的博文，在前面一篇博文中，更多的是一个SpringBoot应用如何最小成本的接入Prometheus，并结合Grafana配置一个完整的应用监控大盘 有看过前文的小伙伴可能知晓，SpringBoot接入Prometheus之后，基本上不用做额外的开发，就已经实现了我们关心的JVM情况、GC情况、HTTP调用请求等信息，然而在实际的业务开发过程中，我们总会遇到一些需要手动上报的场景，那么我们可以怎么处理呢？ 本文的核心知识点： 通过一个实例演示SpringBoot应用，如何实现自定义的数据上报 上篇博文: SpringBoot整合Prometheus实现应用监控"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-10T04:50:05.000Z"}],["meta",{"property":"article:tag","content":"Prometheus"}],["meta",{"property":"article:published_time","content":"2021-11-09T18:44:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-10T04:50:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.自定义埋点上报\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-09T18:44:30.000Z\\",\\"dateModified\\":\\"2023-02-10T04:50:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 项目环境搭建","slug":"i-项目环境搭建","link":"#i-项目环境搭建","children":[{"level":3,"title":"1.依赖","slug":"_1-依赖","link":"#_1-依赖","children":[]},{"level":3,"title":"2. 配置信息","slug":"_2-配置信息","link":"#_2-配置信息","children":[]}]},{"level":2,"title":"II. 自定义上报","slug":"ii-自定义上报","link":"#ii-自定义上报","children":[{"level":3,"title":"1. Prometheus Metric封装","slug":"_1-prometheus-metric封装","link":"#_1-prometheus-metric封装","children":[]},{"level":3,"title":"2. 拦截器实现自定义信息采集上报","slug":"_2-拦截器实现自定义信息采集上报","link":"#_2-拦截器实现自定义信息采集上报","children":[]},{"level":3,"title":"3. 测试","slug":"_3-测试","link":"#_3-测试","children":[]},{"level":3,"title":"4. 小结","slug":"_4-小结","link":"#_4-小结","children":[]}]},{"level":2,"title":"III. 不能错过的源码和相关知识点","slug":"iii-不能错过的源码和相关知识点","link":"#iii-不能错过的源码和相关知识点","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]},{"level":3,"title":"1. 微信公众号: 一灰灰Blog","slug":"_1-微信公众号-一灰灰blog","link":"#_1-微信公众号-一灰灰blog","children":[]}]}],"git":{"createdTime":1676004605000,"updatedTime":1676004605000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":5.6,"words":1681},"filePathRelative":"spring/middle/Prometheus/211109-SpringBoot之Prometheus自定义埋点上报.md","localizedDate":"2021年11月9日","excerpt":"<p>之前介绍了一篇SpringBoot集成Prometheus实现数据上报的博文，在前面一篇博文中，更多的是一个SpringBoot应用如何最小成本的接入Prometheus，并结合Grafana配置一个完整的应用监控大盘</p>\\n<p>有看过前文的小伙伴可能知晓，SpringBoot接入Prometheus之后，基本上不用做额外的开发，就已经实现了我们关心的JVM情况、GC情况、HTTP调用请求等信息，然而在实际的业务开发过程中，我们总会遇到一些需要手动上报的场景，那么我们可以怎么处理呢？</p>\\n<p>本文的核心知识点：</p>\\n<ul>\\n<li>通过一个实例演示SpringBoot应用，如何实现自定义的数据上报</li>\\n</ul>\\n<p>上篇博文: <a href=\\"https://spring.hhui.top/spring-blog/2021/04/19/210419-SpringBoot%E6%95%B4%E5%90%88Prometheus%E5%AE%9E%E7%8E%B0%E5%BA%94%E7%94%A8%E7%9B%91%E6%8E%A7/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SpringBoot整合Prometheus实现应用监控</a></p>\\n","copyright":{},"autoDesc":true}');export{e as data};
