const e=JSON.parse('{"key":"v-97de9458","path":"/column/app/fix/190311-Quick-Fix-%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9B%AE%E6%A0%87%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%A8%8B%E5%AE%9E%E5%BD%95%EF%BC%88%E4%B8%8A%E7%AF%87%EF%BC%89.html","title":"4. 通过反射执行任意类目标方法的实现全程实录（上篇）","lang":"zh-CN","frontmatter":{"order":4,"title":"4. 通过反射执行任意类目标方法的实现全程实录（上篇）","tag":["反射"],"category":["Quick系列","QuickFix","方案设计"],"date":"2019-03-11T22:39:56.000Z","keywords":"反射,JSON,QuickFix,JDK","description":"反射可以说是java中非常强大的一个特性了，而我们的quick-fix整个项目，也都是基于反射的基础实现任意目标方法的调用执行，对于fix项目而已，核心在于以下几点 如何将外部请求定位我们需要执行的类、方法 如何将外部参数转换为目标方法的可执行参数 如何执行目标方法 简单来讲，就是封装参数为目标类型，定位目标，然后执行","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/column/app/fix/190311-Quick-Fix-%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9B%AE%E6%A0%87%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%A8%8B%E5%AE%9E%E5%BD%95%EF%BC%88%E4%B8%8A%E7%AF%87%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"4. 通过反射执行任意类目标方法的实现全程实录（上篇）"}],["meta",{"property":"og:description","content":"反射可以说是java中非常强大的一个特性了，而我们的quick-fix整个项目，也都是基于反射的基础实现任意目标方法的调用执行，对于fix项目而已，核心在于以下几点 如何将外部请求定位我们需要执行的类、方法 如何将外部参数转换为目标方法的可执行参数 如何执行目标方法 简单来讲，就是封装参数为目标类型，定位目标，然后执行"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T10:41:58.000Z"}],["meta",{"property":"article:tag","content":"反射"}],["meta",{"property":"article:published_time","content":"2019-03-11T22:39:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-02T10:41:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. 通过反射执行任意类目标方法的实现全程实录（上篇）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-11T22:39:56.000Z\\",\\"dateModified\\":\\"2024-08-02T10:41:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 参数类型封装","slug":"i-参数类型封装","link":"#i-参数类型封装","children":[{"level":3,"title":"1. 基本类型解析","slug":"_1-基本类型解析","link":"#_1-基本类型解析","children":[]},{"level":3,"title":"2. POJO对象转换","slug":"_2-pojo对象转换","link":"#_2-pojo对象转换","children":[]},{"level":3,"title":"3. Class参数","slug":"_3-class参数","link":"#_3-class参数","children":[]},{"level":3,"title":"4. 泛型处理","slug":"_4-泛型处理","link":"#_4-泛型处理","children":[]}]},{"level":2,"title":"II. 测试","slug":"ii-测试","link":"#ii-测试","children":[{"level":3,"title":"1. 基本类型","slug":"_1-基本类型","link":"#_1-基本类型","children":[]},{"level":3,"title":"2. POJO对象","slug":"_2-pojo对象","link":"#_2-pojo对象","children":[]},{"level":3,"title":"3. Class类型","slug":"_3-class类型","link":"#_3-class类型","children":[]},{"level":3,"title":"4. 泛型","slug":"_4-泛型","link":"#_4-泛型","children":[]}]},{"level":2,"title":"III. 其他","slug":"iii-其他","link":"#iii-其他","children":[{"level":3,"title":"0. 项目相关","slug":"_0-项目相关","link":"#_0-项目相关","children":[]},{"level":3,"title":"1. 一灰灰Blog： https://liuyueyi.github.io/hexblog","slug":"_1-一灰灰blog-https-liuyueyi-github-io-hexblog","link":"#_1-一灰灰blog-https-liuyueyi-github-io-hexblog","children":[]},{"level":3,"title":"2. 声明","slug":"_2-声明","link":"#_2-声明","children":[]},{"level":3,"title":"3. 扫描关注","slug":"_3-扫描关注","link":"#_3-扫描关注","children":[]}]}],"git":{"createdTime":1722595318000,"updatedTime":1722595318000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":8.6,"words":2579},"filePathRelative":"column/app/fix/190311-Quick-Fix-通过反射执行任意类目标方法的实现全程实录（上篇）.md","localizedDate":"2019年3月11日","excerpt":"<p>反射可以说是java中非常强大的一个特性了，而我们的quick-fix整个项目，也都是基于反射的基础实现任意目标方法的调用执行，对于fix项目而已，核心在于以下几点</p>\\n<ul>\\n<li>如何将外部请求定位我们需要执行的类、方法</li>\\n<li>如何将外部参数转换为目标方法的可执行参数</li>\\n<li>如何执行目标方法</li>\\n</ul>\\n<p>简单来讲，就是封装参数为目标类型，定位目标，然后执行</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
