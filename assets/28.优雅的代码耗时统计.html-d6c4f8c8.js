const t=JSON.parse('{"key":"v-5e07f7b6","path":"/java/skill/28.%E4%BC%98%E9%9B%85%E7%9A%84%E4%BB%A3%E7%A0%81%E8%80%97%E6%97%B6%E7%BB%9F%E8%AE%A1.html","title":"28.优雅的代码耗时统计策略","lang":"zh-CN","frontmatter":{"title":"28.优雅的代码耗时统计策略","order":28,"tag":["JDK","编程技巧"],"category":["Java","编程技巧"],"date":"2020-03-03T09:58:40.000Z","keywords":"AutoCloseable Java 耗时 AOP 代理模式","description":"实战28：优雅的实现代码耗时统计 在我们的实际开发中，多多少少会遇到统计一段代码片段的耗时的情况，我们一般的写法如下 long start = System.currentTimeMillis(); try { // .... 具体的代码段 } finally { System.out.println(\\"cost: \\" + (System.currentTimeMillis() - start)); } 上面的写法没有什么毛病，但是看起来就不太美观了，那么有没有什么更优雅的写法呢？","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/java/skill/28.%E4%BC%98%E9%9B%85%E7%9A%84%E4%BB%A3%E7%A0%81%E8%80%97%E6%97%B6%E7%BB%9F%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"28.优雅的代码耗时统计策略"}],["meta",{"property":"og:description","content":"实战28：优雅的实现代码耗时统计 在我们的实际开发中，多多少少会遇到统计一段代码片段的耗时的情况，我们一般的写法如下 long start = System.currentTimeMillis(); try { // .... 具体的代码段 } finally { System.out.println(\\"cost: \\" + (System.currentTimeMillis() - start)); } 上面的写法没有什么毛病，但是看起来就不太美观了，那么有没有什么更优雅的写法呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-17T14:22:08.000Z"}],["meta",{"property":"article:tag","content":"JDK"}],["meta",{"property":"article:tag","content":"编程技巧"}],["meta",{"property":"article:published_time","content":"2020-03-03T09:58:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-17T14:22:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"28.优雅的代码耗时统计策略\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-03T09:58:40.000Z\\",\\"dateModified\\":\\"2023-02-17T14:22:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 代理方式","slug":"_1-代理方式","link":"#_1-代理方式","children":[]},{"level":2,"title":"2. AutoCloseable","slug":"_2-autocloseable","link":"#_2-autocloseable","children":[]},{"level":2,"title":"3. 小结","slug":"_3-小结","link":"#_3-小结","children":[]}],"git":{"createdTime":1676643728000,"updatedTime":1676643728000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":3.93,"words":1179},"filePathRelative":"java/skill/28.优雅的代码耗时统计.md","localizedDate":"2020年3月3日","excerpt":"<h1> 实战28：优雅的实现代码耗时统计</h1>\\n<p>在我们的实际开发中，多多少少会遇到统计一段代码片段的耗时的情况，我们一般的写法如下</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">long</span> start <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">currentTimeMillis</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// .... 具体的代码段</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">finally</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"cost: \\"</span> <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">currentTimeMillis</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> start<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>上面的写法没有什么毛病，但是看起来就不太美观了，那么有没有什么更优雅的写法呢？</p>\\n","copyright":{},"autoDesc":true}');export{t as data};
