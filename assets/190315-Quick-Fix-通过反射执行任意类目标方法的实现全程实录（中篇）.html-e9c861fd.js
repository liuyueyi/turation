const e=JSON.parse('{"key":"v-7622637e","path":"/column/app/fix/190315-Quick-Fix-%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9B%AE%E6%A0%87%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%A8%8B%E5%AE%9E%E5%BD%95%EF%BC%88%E4%B8%AD%E7%AF%87%EF%BC%89.html","title":"5. 通过反射执行任意类目标方法的实现全程实录（中篇）","lang":"zh-CN","frontmatter":{"order":5,"title":"5. 通过反射执行任意类目标方法的实现全程实录（中篇）","tag":["反射"],"category":["Quick系列","QuickFix","方案设计"],"date":"2019-03-15T21:51:30.000Z","keywords":"Java,反射,Quick系列,QuickFix","description":"全程实录上篇，主要介绍了如何解析传入的String参数为我们目标方法的参数类型和对象，其中主要讲述的是基本类型、Class类型、泛型以及普通的POJO类型转换；我们这一篇，目的则放在如何找到需要执行的类和方法，这里需要借助前面的参数解析结果来确定目标方法","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/column/app/fix/190315-Quick-Fix-%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E6%89%A7%E8%A1%8C%E4%BB%BB%E6%84%8F%E7%B1%BB%E7%9B%AE%E6%A0%87%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%85%A8%E7%A8%8B%E5%AE%9E%E5%BD%95%EF%BC%88%E4%B8%AD%E7%AF%87%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"5. 通过反射执行任意类目标方法的实现全程实录（中篇）"}],["meta",{"property":"og:description","content":"全程实录上篇，主要介绍了如何解析传入的String参数为我们目标方法的参数类型和对象，其中主要讲述的是基本类型、Class类型、泛型以及普通的POJO类型转换；我们这一篇，目的则放在如何找到需要执行的类和方法，这里需要借助前面的参数解析结果来确定目标方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T10:41:58.000Z"}],["meta",{"property":"article:tag","content":"反射"}],["meta",{"property":"article:published_time","content":"2019-03-15T21:51:30.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-02T10:41:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. 通过反射执行任意类目标方法的实现全程实录（中篇）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-15T21:51:30.000Z\\",\\"dateModified\\":\\"2024-08-02T10:41:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 目标方法定位","slug":"i-目标方法定位","link":"#i-目标方法定位","children":[{"level":3,"title":"1. 获取目标类","slug":"_1-获取目标类","link":"#_1-获取目标类","children":[]},{"level":3,"title":"2. 获取目标方法","slug":"_2-获取目标方法","link":"#_2-获取目标方法","children":[]}]},{"level":2,"title":"II. 测试","slug":"ii-测试","link":"#ii-测试","children":[{"level":3,"title":"1. 基本测试","slug":"_1-基本测试","link":"#_1-基本测试","children":[]},{"level":3,"title":"2. 父类方法测试","slug":"_2-父类方法测试","link":"#_2-父类方法测试","children":[]}]},{"level":2,"title":"III. 扩展之反射获取方法的参数名","slug":"iii-扩展之反射获取方法的参数名","link":"#iii-扩展之反射获取方法的参数名","children":[{"level":3,"title":"1. jdk8反射获取参数名","slug":"_1-jdk8反射获取参数名","link":"#_1-jdk8反射获取参数名","children":[]}]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"0. 项目相关","slug":"_0-项目相关","link":"#_0-项目相关","children":[]},{"level":3,"title":"1. 一灰灰Blog： https://liuyueyi.github.io/hexblog","slug":"_1-一灰灰blog-https-liuyueyi-github-io-hexblog","link":"#_1-一灰灰blog-https-liuyueyi-github-io-hexblog","children":[]},{"level":3,"title":"2. 声明","slug":"_2-声明","link":"#_2-声明","children":[]},{"level":3,"title":"3. 扫描关注","slug":"_3-扫描关注","link":"#_3-扫描关注","children":[]}]}],"git":{"createdTime":1722595318000,"updatedTime":1722595318000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":8.16,"words":2447},"filePathRelative":"column/app/fix/190315-Quick-Fix-通过反射执行任意类目标方法的实现全程实录（中篇）.md","localizedDate":"2019年3月15日","excerpt":"<p>全程实录上篇，主要介绍了如何解析传入的String参数为我们目标方法的参数类型和对象，其中主要讲述的是基本类型、Class类型、泛型以及普通的POJO类型转换；我们这一篇，目的则放在如何找到需要执行的类和方法，这里需要借助前面的参数解析结果来确定目标方法</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
