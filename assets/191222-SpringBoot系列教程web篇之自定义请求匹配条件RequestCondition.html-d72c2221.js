const e=JSON.parse('{"key":"v-3ac0b7f0","path":"/spring/web/Request/191222-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8Bweb%E7%AF%87%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%B7%E6%B1%82%E5%8C%B9%E9%85%8D%E6%9D%A1%E4%BB%B6RequestCondition.html","title":"4.自定义请求匹配条件RequestCondition","lang":"zh-CN","frontmatter":{"order":4,"title":"4.自定义请求匹配条件RequestCondition","tag":["Web","RequestCondition"],"category":["SpringBoot","WEB系列","Request"],"date":"2019-12-22T16:49:58.000Z","keywords":"spring springboot springmvc RequestCondition HandlerMapping RequestHeader","description":"在spring mvc中，我们知道用户发起的请求可以通过url匹配到我们通过@RequestMapping定义的服务端点上；不知道有几个问题大家是否有过思考 一个项目中，能否存在完全相同的url？ 有了解http协议的同学可能很快就能给出答案，当然可以，url相同，请求方法不同即可；那么能否出现url相同且请求方法l也相同的呢？ 本文将介绍一下如何使用RequestCondition结合RequestMappingHandlerMapping，来实现url匹配规则的扩展，从而支持上面提出的case","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/web/Request/191222-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8Bweb%E7%AF%87%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%B7%E6%B1%82%E5%8C%B9%E9%85%8D%E6%9D%A1%E4%BB%B6RequestCondition.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"4.自定义请求匹配条件RequestCondition"}],["meta",{"property":"og:description","content":"在spring mvc中，我们知道用户发起的请求可以通过url匹配到我们通过@RequestMapping定义的服务端点上；不知道有几个问题大家是否有过思考 一个项目中，能否存在完全相同的url？ 有了解http协议的同学可能很快就能给出答案，当然可以，url相同，请求方法不同即可；那么能否出现url相同且请求方法l也相同的呢？ 本文将介绍一下如何使用RequestCondition结合RequestMappingHandlerMapping，来实现url匹配规则的扩展，从而支持上面提出的case"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-10T04:50:05.000Z"}],["meta",{"property":"article:tag","content":"Web"}],["meta",{"property":"article:tag","content":"RequestCondition"}],["meta",{"property":"article:published_time","content":"2019-12-22T16:49:58.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-10T04:50:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4.自定义请求匹配条件RequestCondition\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-12-22T16:49:58.000Z\\",\\"dateModified\\":\\"2023-02-10T04:50:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 环境相关","slug":"i-环境相关","link":"#i-环境相关","children":[{"level":3,"title":"1. 项目搭建","slug":"_1-项目搭建","link":"#_1-项目搭建","children":[]},{"level":3,"title":"2. RequestCondition介绍","slug":"_2-requestcondition介绍","link":"#_2-requestcondition介绍","children":[]}]},{"level":2,"title":"II. 实例说明","slug":"ii-实例说明","link":"#ii-实例说明","children":[{"level":3,"title":"1. 场景说明","slug":"_1-场景说明","link":"#_1-场景说明","children":[]},{"level":3,"title":"2. 实现","slug":"_2-实现","link":"#_2-实现","children":[]},{"level":3,"title":"3. 测试","slug":"_3-测试","link":"#_3-测试","children":[]}]},{"level":2,"title":"III. 其他","slug":"iii-其他","link":"#iii-其他","children":[]}],"git":{"createdTime":1676004605000,"updatedTime":1676004605000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":8.67,"words":2600},"filePathRelative":"spring/web/Request/191222-SpringBoot系列教程web篇之自定义请求匹配条件RequestCondition.md","localizedDate":"2019年12月22日","excerpt":"<p>在spring mvc中，我们知道用户发起的请求可以通过url匹配到我们通过<code>@RequestMapping</code>定义的服务端点上；不知道有几个问题大家是否有过思考</p>\\n<p>一个项目中，能否存在完全相同的url？</p>\\n<p>有了解http协议的同学可能很快就能给出答案，当然可以，url相同，请求方法不同即可；那么能否出现url相同且请求方法l也相同的呢？</p>\\n<p>本文将介绍一下如何使用<code>RequestCondition</code>结合<code>RequestMappingHandlerMapping</code>，来实现url匹配规则的扩展，从而支持上面提出的case</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
