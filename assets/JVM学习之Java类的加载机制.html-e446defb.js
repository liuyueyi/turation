const l=JSON.parse('{"key":"v-f460de50","path":"/java/jdk/jvm/JVM%E5%AD%A6%E4%B9%A0%E4%B9%8BJava%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.html","title":"JVM学习之Java类的加载机制","lang":"zh-CN","frontmatter":{"title":"JVM学习之Java类的加载机制","tag":["Java","JDK"],"category":["Java","JVM"],"date":"2018-03-13T14:26:40.000Z","description":"JVM学习之Java类的加载机制 平常我们使用java的多，深入到jvm层的机会却很少，平时若不关注，也不会清楚java文件编译后的class文件是如何被jvm加载到内存，如何进行初始化，如何进行运行的 因此这里主要学习的目标就是class文件的加载，会包含以下内容： 什么是类加载 类加载的过程 什么时候触发类加载 类加载器 双亲委托机制 I. 什么是类的加载 简单来讲，类加载就是将class文件中的二进制，读取到内存中，解析其中定义的数据结构，然后在运行时方法区创建对应的数据结构，在堆内创建对应的class对象，而这个class对象，就是封装了对应的数据结构，和相关数据的访问操作方法；","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/java/jdk/jvm/JVM%E5%AD%A6%E4%B9%A0%E4%B9%8BJava%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"JVM学习之Java类的加载机制"}],["meta",{"property":"og:description","content":"JVM学习之Java类的加载机制 平常我们使用java的多，深入到jvm层的机会却很少，平时若不关注，也不会清楚java文件编译后的class文件是如何被jvm加载到内存，如何进行初始化，如何进行运行的 因此这里主要学习的目标就是class文件的加载，会包含以下内容： 什么是类加载 类加载的过程 什么时候触发类加载 类加载器 双亲委托机制 I. 什么是类的加载 简单来讲，类加载就是将class文件中的二进制，读取到内存中，解析其中定义的数据结构，然后在运行时方法区创建对应的数据结构，在堆内创建对应的class对象，而这个class对象，就是封装了对应的数据结构，和相关数据的访问操作方法；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-06T00:41:18.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JDK"}],["meta",{"property":"article:published_time","content":"2018-03-13T14:26:40.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-06T00:41:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM学习之Java类的加载机制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-03-13T14:26:40.000Z\\",\\"dateModified\\":\\"2024-08-06T00:41:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 什么是类的加载","slug":"i-什么是类的加载","link":"#i-什么是类的加载","children":[{"level":3,"title":"1. 加载哪里的class文件？","slug":"_1-加载哪里的class文件","link":"#_1-加载哪里的class文件","children":[]},{"level":3,"title":"2. 数据结构","slug":"_2-数据结构","link":"#_2-数据结构","children":[]},{"level":3,"title":"3. class对象","slug":"_3-class对象","link":"#_3-class对象","children":[]}]},{"level":2,"title":"II. 类加载过程","slug":"ii-类加载过程","link":"#ii-类加载过程","children":[{"level":3,"title":"1. 加载","slug":"_1-加载","link":"#_1-加载","children":[]},{"level":3,"title":"2. 验证","slug":"_2-验证","link":"#_2-验证","children":[]},{"level":3,"title":"3. 准备","slug":"_3-准备","link":"#_3-准备","children":[]},{"level":3,"title":"4. 解析","slug":"_4-解析","link":"#_4-解析","children":[]},{"level":3,"title":"5. 初始化","slug":"_5-初始化","link":"#_5-初始化","children":[]},{"level":3,"title":"6. 卸载","slug":"_6-卸载","link":"#_6-卸载","children":[]},{"level":3,"title":"III. 类加载器","slug":"iii-类加载器","link":"#iii-类加载器","children":[]},{"level":3,"title":"1. 启动类加载器(BootStrap ClassLoader)","slug":"_1-启动类加载器-bootstrap-classloader","link":"#_1-启动类加载器-bootstrap-classloader","children":[]},{"level":3,"title":"2. 扩展类加载器（Extension ClassLoader）","slug":"_2-扩展类加载器-extension-classloader","link":"#_2-扩展类加载器-extension-classloader","children":[]},{"level":3,"title":"3. 应用类加载器（Application ClassLoader）","slug":"_3-应用类加载器-application-classloader","link":"#_3-应用类加载器-application-classloader","children":[]},{"level":3,"title":"4. 自定义类加载器（User ClassLoader）","slug":"_4-自定义类加载器-user-classloader","link":"#_4-自定义类加载器-user-classloader","children":[]},{"level":3,"title":"5.类加载机制","slug":"_5-类加载机制","link":"#_5-类加载机制","children":[]},{"level":3,"title":"6.类的加载","slug":"_6-类的加载","link":"#_6-类的加载","children":[]},{"level":3,"title":"IV. 双亲委托","slug":"iv-双亲委托","link":"#iv-双亲委托","children":[]}]}],"git":{"createdTime":1722595318000,"updatedTime":1722904878000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":2}]},"readingTime":{"minutes":7.25,"words":2174},"filePathRelative":"java/jdk/jvm/JVM学习之Java类的加载机制.md","localizedDate":"2018年3月13日","excerpt":"<h1> JVM学习之Java类的加载机制</h1>\\n<p>平常我们使用java的多，深入到jvm层的机会却很少，平时若不关注，也不会清楚java文件编译后的class文件是如何被jvm加载到内存，如何进行初始化，如何进行运行的</p>\\n<p>因此这里主要学习的目标就是class文件的加载，会包含以下内容：</p>\\n<ul>\\n<li>什么是类加载</li>\\n<li>类加载的过程</li>\\n<li>什么时候触发类加载</li>\\n<li>类加载器</li>\\n<li>双亲委托机制</li>\\n</ul>\\n<h2> I. 什么是类的加载</h2>\\n<p>简单来讲，类加载就是将class文件中的二进制，读取到内存中，解析其中定义的数据结构，然后在运行时方法区创建对应的数据结构，在堆内创建对应的class对象，而这个class对象，就是封装了对应的数据结构，和相关数据的访问操作方法；</p>","copyright":{},"autoDesc":true}');export{l as data};
