const e=JSON.parse('{"key":"v-1c3735b2","path":"/spring/db/Mybatis/11.210726-SpringBoot%E7%B3%BB%E5%88%97Mybatis%E4%B9%8B%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6Interceptor.html","title":"11.插件机制Interceptor","lang":"zh-CN","frontmatter":{"order":11,"title":"11.插件机制Interceptor","tag":["Mybatis"],"category":["SpringBoot","DB系列","Mybatis"],"date":"2021-07-26T16:03:56.000Z","keywords":"mybatis mysql springboot spring","description":"在Mybatis中，插件机制提供了非常强大的扩展能力，在sql最终执行之前，提供了四个拦截点，支持不同场景的功能扩展 Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed) ParameterHandler (getParameterObject, setParameters) ResultSetHandler (handleResultSets, handleOutputParameters) StatementHandler (prepare, parameterize, batch, update, query) 本文将主要介绍一下自定义Interceptor的使用姿势，并给出一个通过自定义插件来输出执行sql，与耗时的case","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/tutorial/spring/db/Mybatis/11.210726-SpringBoot%E7%B3%BB%E5%88%97Mybatis%E4%B9%8B%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6Interceptor.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"11.插件机制Interceptor"}],["meta",{"property":"og:description","content":"在Mybatis中，插件机制提供了非常强大的扩展能力，在sql最终执行之前，提供了四个拦截点，支持不同场景的功能扩展 Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed) ParameterHandler (getParameterObject, setParameters) ResultSetHandler (handleResultSets, handleOutputParameters) StatementHandler (prepare, parameterize, batch, update, query) 本文将主要介绍一下自定义Interceptor的使用姿势，并给出一个通过自定义插件来输出执行sql，与耗时的case"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-03T10:09:21.000Z"}],["meta",{"property":"article:tag","content":"Mybatis"}],["meta",{"property":"article:published_time","content":"2021-07-26T16:03:56.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-03T10:09:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11.插件机制Interceptor\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-26T16:03:56.000Z\\",\\"dateModified\\":\\"2023-02-03T10:09:21.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 环境准备","slug":"i-环境准备","link":"#i-环境准备","children":[{"level":3,"title":"1. 数据库准备","slug":"_1-数据库准备","link":"#_1-数据库准备","children":[]},{"level":3,"title":"2. 项目环境","slug":"_2-项目环境","link":"#_2-项目环境","children":[]}]},{"level":2,"title":"II. 实例演示","slug":"ii-实例演示","link":"#ii-实例演示","children":[{"level":3,"title":"1. 自定义interceptor","slug":"_1-自定义interceptor","link":"#_1-自定义interceptor","children":[]},{"level":3,"title":"2. 插件注册","slug":"_2-插件注册","link":"#_2-插件注册","children":[]},{"level":3,"title":"3. 小结","slug":"_3-小结","link":"#_3-小结","children":[]}]},{"level":2,"title":"III. 不能错过的源码和相关知识点","slug":"iii-不能错过的源码和相关知识点","link":"#iii-不能错过的源码和相关知识点","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]}]}],"git":{"createdTime":1675418961000,"updatedTime":1675418961000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":7.89,"words":2366},"filePathRelative":"spring/db/Mybatis/11.210726-SpringBoot系列Mybatis之插件机制Interceptor.md","localizedDate":"2021年7月26日","excerpt":"<p>在Mybatis中，插件机制提供了非常强大的扩展能力，在sql最终执行之前，提供了四个拦截点，支持不同场景的功能扩展</p>\\n<ul>\\n<li>Executor (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed)</li>\\n<li>ParameterHandler (getParameterObject, setParameters)</li>\\n<li>ResultSetHandler (handleResultSets, handleOutputParameters)</li>\\n<li>StatementHandler (prepare, parameterize, batch, update, query)</li>\\n</ul>\\n<p>本文将主要介绍一下自定义Interceptor的使用姿势，并给出一个通过自定义插件来输出执行sql，与耗时的case</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
