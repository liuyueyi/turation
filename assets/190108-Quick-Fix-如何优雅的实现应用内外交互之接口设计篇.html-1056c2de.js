const e=JSON.parse('{"key":"v-8540bbcc","path":"/column/app/fix/190108-Quick-Fix-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%BA%94%E7%94%A8%E5%86%85%E5%A4%96%E4%BA%A4%E4%BA%92%E4%B9%8B%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E7%AF%87.html","title":"3. 如何优雅的实现应用内外交互之接口设计篇","lang":"zh-CN","frontmatter":{"order":3,"title":"3. 如何优雅的实现应用内外交互之接口设计篇","tag":["Java","技术方案"],"category":["Quick系列","QuickFix"],"date":"2019-01-08T21:33:42.000Z","keywords":"QuickFix,技术方案,数据订正","description":"如何实现应用内外交互，是Quick-Fix框架的核心之一，我们常见的应用有提供web服务的（如Spring应用），有进行大数据计算的（如Storm应用），有提供rpc的后台服务（如通过dubbo提供rpc的数据服务），有纯jar服务等；基本上我们可以划分为两类 应用本身，有一套健全的与外界交互的机制（这里不包括db/redis等数据的读写） 应用只关注自己的服务功能（接收数据，产生数据，保存数据），本身不与第三方的应用进行交互 针对上面这两种case，我们应该怎么来设计一套应用内外交互的方案，来实现接收外部请求，执行应用内部方法或访问应用内部数据，并返回结果的目的？","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/column/app/fix/190108-Quick-Fix-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%BA%94%E7%94%A8%E5%86%85%E5%A4%96%E4%BA%A4%E4%BA%92%E4%B9%8B%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E7%AF%87.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"3. 如何优雅的实现应用内外交互之接口设计篇"}],["meta",{"property":"og:description","content":"如何实现应用内外交互，是Quick-Fix框架的核心之一，我们常见的应用有提供web服务的（如Spring应用），有进行大数据计算的（如Storm应用），有提供rpc的后台服务（如通过dubbo提供rpc的数据服务），有纯jar服务等；基本上我们可以划分为两类 应用本身，有一套健全的与外界交互的机制（这里不包括db/redis等数据的读写） 应用只关注自己的服务功能（接收数据，产生数据，保存数据），本身不与第三方的应用进行交互 针对上面这两种case，我们应该怎么来设计一套应用内外交互的方案，来实现接收外部请求，执行应用内部方法或访问应用内部数据，并返回结果的目的？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T10:41:58.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"技术方案"}],["meta",{"property":"article:published_time","content":"2019-01-08T21:33:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-02T10:41:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. 如何优雅的实现应用内外交互之接口设计篇\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-01-08T21:33:42.000Z\\",\\"dateModified\\":\\"2024-08-02T10:41:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 交互规范设计","slug":"i-交互规范设计","link":"#i-交互规范设计","children":[{"level":3,"title":"1. 请求参数确认","slug":"_1-请求参数确认","link":"#_1-请求参数确认","children":[]},{"level":3,"title":"2. 请求参数说明","slug":"_2-请求参数说明","link":"#_2-请求参数说明","children":[]},{"level":3,"title":"c. 传参说明","slug":"c-传参说明","link":"#c-传参说明","children":[]}]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]},{"level":3,"title":"1. 一灰灰Blog： https://liuyueyi.github.io/hexblog","slug":"_1-一灰灰blog-https-liuyueyi-github-io-hexblog","link":"#_1-一灰灰blog-https-liuyueyi-github-io-hexblog","children":[]},{"level":3,"title":"2. 声明","slug":"_2-声明","link":"#_2-声明","children":[]},{"level":3,"title":"3. 扫描关注","slug":"_3-扫描关注","link":"#_3-扫描关注","children":[]}]}],"git":{"createdTime":1722595318000,"updatedTime":1722595318000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":7.05,"words":2116},"filePathRelative":"column/app/fix/190108-Quick-Fix-如何优雅的实现应用内外交互之接口设计篇.md","localizedDate":"2019年1月8日","excerpt":"<p>如何实现应用内外交互，是Quick-Fix框架的核心之一，我们常见的应用有提供web服务的（如Spring应用），有进行大数据计算的（如Storm应用），有提供rpc的后台服务（如通过dubbo提供rpc的数据服务），有纯jar服务等；基本上我们可以划分为两类</p>\\n<ul>\\n<li>应用本身，有一套健全的与外界交互的机制（这里不包括db/redis等数据的读写）</li>\\n<li>应用只关注自己的服务功能（接收数据，产生数据，保存数据），本身不与第三方的应用进行交互</li>\\n</ul>\\n<p>针对上面这两种case，我们应该怎么来设计一套应用内外交互的方案，来实现接收外部请求，执行应用内部方法或访问应用内部数据，并返回结果的目的？</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
