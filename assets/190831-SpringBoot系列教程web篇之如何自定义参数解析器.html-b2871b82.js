const e=JSON.parse('{"key":"v-05108ed0","path":"/spring/web/Request/190831-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8Bweb%E7%AF%87%E4%B9%8B%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E5%99%A8.html","title":"3.如何自定义参数解析器","lang":"zh-CN","frontmatter":{"order":3,"title":"3.如何自定义参数解析器","tag":["请求参数"],"category":["SpringBoot","WEB系列","Request"],"date":"2019-08-31T16:45:48.000Z","keywords":"Spring SpringBoot 参数解析 HandlerMethodArgumentResolver","description":"SpringMVC提供了各种姿势的http参数解析支持，从前面的GET/POST参数解析篇也可以看到，加一个@RequsetParam注解就可以将方法参数与http参数绑定，看到这时自然就会好奇这是怎么做到的,我们能不能自己定义一种参数解析规则呢？ 本文将介绍如何实现自定义的参数解析，并让其生效","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/web/Request/190831-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8Bweb%E7%AF%87%E4%B9%8B%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"3.如何自定义参数解析器"}],["meta",{"property":"og:description","content":"SpringMVC提供了各种姿势的http参数解析支持，从前面的GET/POST参数解析篇也可以看到，加一个@RequsetParam注解就可以将方法参数与http参数绑定，看到这时自然就会好奇这是怎么做到的,我们能不能自己定义一种参数解析规则呢？ 本文将介绍如何实现自定义的参数解析，并让其生效"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-10T04:50:05.000Z"}],["meta",{"property":"article:tag","content":"请求参数"}],["meta",{"property":"article:published_time","content":"2019-08-31T16:45:48.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-10T04:50:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.如何自定义参数解析器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-31T16:45:48.000Z\\",\\"dateModified\\":\\"2023-02-10T04:50:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 环境搭建","slug":"i-环境搭建","link":"#i-环境搭建","children":[]},{"level":2,"title":"II. 自定义参数解析器","slug":"ii-自定义参数解析器","link":"#ii-自定义参数解析器","children":[{"level":3,"title":"1. 参数解析链路","slug":"_1-参数解析链路","link":"#_1-参数解析链路","children":[]},{"level":3,"title":"2. HandlerMethodArgumentResolver","slug":"_2-handlermethodargumentresolver","link":"#_2-handlermethodargumentresolver","children":[]},{"level":3,"title":"3. 注册","slug":"_3-注册","link":"#_3-注册","children":[]},{"level":3,"title":"4. 测试","slug":"_4-测试","link":"#_4-测试","children":[]}]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"0. 项目&相关博文","slug":"_0-项目-相关博文","link":"#_0-项目-相关博文","children":[]}]}],"git":{"createdTime":1676004605000,"updatedTime":1676004605000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":4.89,"words":1466},"filePathRelative":"spring/web/Request/190831-SpringBoot系列教程web篇之如何自定义参数解析器.md","localizedDate":"2019年8月31日","excerpt":"<p>SpringMVC提供了各种姿势的http参数解析支持，从前面的GET/POST参数解析篇也可以看到，加一个<code>@RequsetParam</code>注解就可以将方法参数与http参数绑定，看到这时自然就会好奇这是怎么做到的,我们能不能自己定义一种参数解析规则呢？</p>\\n<p>本文将介绍如何实现自定义的参数解析，并让其生效</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
