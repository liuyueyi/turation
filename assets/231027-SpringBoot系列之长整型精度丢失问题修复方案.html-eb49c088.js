const e=JSON.parse('{"key":"v-50142762","path":"/spring/web/%E5%85%B6%E4%BB%96/231027-SpringBoot%E7%B3%BB%E5%88%97%E4%B9%8B%E9%95%BF%E6%95%B4%E5%9E%8B%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88.html","title":"7.别再为JS长整型精度丢失烦恼了！这些方法帮你轻松搞定！","lang":"zh-CN","frontmatter":{"order":7,"title":"7.别再为JS长整型精度丢失烦恼了！这些方法帮你轻松搞定！","tag":["Thymeleaf"],"category":["SpringBoot","WEB系列","Response"],"date":"2023-10-27T13:50:27.000Z","keywords":["Thymeleaf","精度问题"],"description":"javascript以64位双精度浮点数存储所有Number类型值，即计算机最多存储64位二进制数。 但是需要注意的是Number包含了我们常说的整形、浮点型，相比较于整形而言，会有一位存储小数点的偏移位，由于存储二进制时小数点的偏移量最大为52位，计算机存储的为二进制，而能存储的二进制为62位，超出就会有舍入操作，因此 JS 中能精准表示的最大整数是 Math.pow(2, 53)，十进制即9007199254740992 大于9007199254740992的可能会丢失精度 因此对于java后端返回的一个大整数，如基于前面说到的雪花算法生成的id，前端js接收处理时，就可能出现精度问题 接下来我们以Thymeleaf模板渲染引擎，来介绍一下对于大整数的精度丢失问题的几种解决方案","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/web/%E5%85%B6%E4%BB%96/231027-SpringBoot%E7%B3%BB%E5%88%97%E4%B9%8B%E9%95%BF%E6%95%B4%E5%9E%8B%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"7.别再为JS长整型精度丢失烦恼了！这些方法帮你轻松搞定！"}],["meta",{"property":"og:description","content":"javascript以64位双精度浮点数存储所有Number类型值，即计算机最多存储64位二进制数。 但是需要注意的是Number包含了我们常说的整形、浮点型，相比较于整形而言，会有一位存储小数点的偏移位，由于存储二进制时小数点的偏移量最大为52位，计算机存储的为二进制，而能存储的二进制为62位，超出就会有舍入操作，因此 JS 中能精准表示的最大整数是 Math.pow(2, 53)，十进制即9007199254740992 大于9007199254740992的可能会丢失精度 因此对于java后端返回的一个大整数，如基于前面说到的雪花算法生成的id，前端js接收处理时，就可能出现精度问题 接下来我们以Thymeleaf模板渲染引擎，来介绍一下对于大整数的精度丢失问题的几种解决方案"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-22T06:07:04.000Z"}],["meta",{"property":"article:tag","content":"Thymeleaf"}],["meta",{"property":"article:published_time","content":"2023-10-27T13:50:27.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-22T06:07:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7.别再为JS长整型精度丢失烦恼了！这些方法帮你轻松搞定！\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-27T13:50:27.000Z\\",\\"dateModified\\":\\"2023-12-22T06:07:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 测试项目搭建","slug":"i-测试项目搭建","link":"#i-测试项目搭建","children":[{"level":3,"title":"1. 依赖","slug":"_1-依赖","link":"#_1-依赖","children":[]},{"level":3,"title":"2. 配置","slug":"_2-配置","link":"#_2-配置","children":[]}]},{"level":2,"title":"II. 长整型适配","slug":"ii-长整型适配","link":"#ii-长整型适配","children":[{"level":3,"title":"1. 场景复现","slug":"_1-场景复现","link":"#_1-场景复现","children":[]},{"level":3,"title":"2. long转String，解决长整型问题","slug":"_2-long转string-解决长整型问题","link":"#_2-long转string-解决长整型问题","children":[]},{"level":3,"title":"3. 修改序列化方式，实现长整型转字符串","slug":"_3-修改序列化方式-实现长整型转字符串","link":"#_3-修改序列化方式-实现长整型转字符串","children":[]},{"level":3,"title":"4. Thymeleaf 长整型精度丢失问题解决方案","slug":"_4-thymeleaf-长整型精度丢失问题解决方案","link":"#_4-thymeleaf-长整型精度丢失问题解决方案","children":[]},{"level":3,"title":"5. 小结","slug":"_5-小结","link":"#_5-小结","children":[]}]},{"level":2,"title":"III. 不能错过的源码和相关知识点","slug":"iii-不能错过的源码和相关知识点","link":"#iii-不能错过的源码和相关知识点","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]}]}],"git":{"createdTime":1703214070000,"updatedTime":1703225224000,"contributors":[{"name":"wuzebang","email":"bangzewu@126.com","commits":3}]},"readingTime":{"minutes":10.38,"words":3114},"filePathRelative":"spring/web/其他/231027-SpringBoot系列之长整型精度丢失问题修复方案.md","localizedDate":"2023年10月27日","excerpt":"<p>javascript以64位双精度浮点数存储所有Number类型值，即计算机最多存储64位二进制数。 但是需要注意的是Number包含了我们常说的整形、浮点型，相比较于整形而言，会有一位存储小数点的偏移位，由于存储二进制时小数点的偏移量最大为52位，计算机存储的为二进制，而能存储的二进制为62位，超出就会有舍入操作，因此 JS 中能精准表示的最大整数是 Math.pow(2, 53)，十进制即<code>9007199254740992</code> 大于<code>9007199254740992</code>的可能会丢失精度</p>\\n<p>因此对于java后端返回的一个大整数，如基于前面说到的雪花算法生成的id，前端js接收处理时，就可能出现精度问题</p>\\n<p>接下来我们以Thymeleaf模板渲染引擎，来介绍一下对于大整数的精度丢失问题的几种解决方案</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
