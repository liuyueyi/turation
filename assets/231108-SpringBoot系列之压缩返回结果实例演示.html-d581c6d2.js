const e=JSON.parse('{"key":"v-d8a6ba42","path":"/spring/web/Response/231108-SpringBoot%E7%B3%BB%E5%88%97%E4%B9%8B%E5%8E%8B%E7%BC%A9%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA.html","title":"17.压缩返回结果实例演示，让你的性能更高效！","lang":"zh-CN","frontmatter":{"order":17,"title":"17.压缩返回结果实例演示，让你的性能更高效！","tag":["压缩"],"category":["SpringBoot","WEB系列","Response"],"date":"2023-11-08T10:38:11.000Z","keywords":["压缩","SpringMVC"],"description":"本文将介绍一个SpringBoot进阶技巧：压缩返回结果实例演示，旨在提升您的网站访问性能。 当返回的数据较大时，网络开销通常不可忽视。为了解决这个问题，我们可以考虑压缩返回的结果，以减少传输的数据量，从而降低网络开销并提高性能。对于依赖Spring生态的Java开发者来说，幸运的是SpringBoot提供了非常便捷的使用方式。 接下来，我们将介绍几种不同情况下的压缩返回的使用方式： 直接返回文本：使用text/plain作为响应类型。 返回JSON数据：使用application/json作为响应类型。 返回静态资源文件：对于静态资源文件，可以使用压缩算法进行压缩后再返回。","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/web/Response/231108-SpringBoot%E7%B3%BB%E5%88%97%E4%B9%8B%E5%8E%8B%E7%BC%A9%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"17.压缩返回结果实例演示，让你的性能更高效！"}],["meta",{"property":"og:description","content":"本文将介绍一个SpringBoot进阶技巧：压缩返回结果实例演示，旨在提升您的网站访问性能。 当返回的数据较大时，网络开销通常不可忽视。为了解决这个问题，我们可以考虑压缩返回的结果，以减少传输的数据量，从而降低网络开销并提高性能。对于依赖Spring生态的Java开发者来说，幸运的是SpringBoot提供了非常便捷的使用方式。 接下来，我们将介绍几种不同情况下的压缩返回的使用方式： 直接返回文本：使用text/plain作为响应类型。 返回JSON数据：使用application/json作为响应类型。 返回静态资源文件：对于静态资源文件，可以使用压缩算法进行压缩后再返回。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-22T03:01:10.000Z"}],["meta",{"property":"article:tag","content":"压缩"}],["meta",{"property":"article:published_time","content":"2023-11-08T10:38:11.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-22T03:01:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"17.压缩返回结果实例演示，让你的性能更高效！\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-08T10:38:11.000Z\\",\\"dateModified\\":\\"2023-12-22T03:01:10.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 项目配置","slug":"i-项目配置","link":"#i-项目配置","children":[{"level":3,"title":"1. 依赖","slug":"_1-依赖","link":"#_1-依赖","children":[]},{"level":3,"title":"2. 启动入口","slug":"_2-启动入口","link":"#_2-启动入口","children":[]}]},{"level":2,"title":"II. 返回结果压缩","slug":"ii-返回结果压缩","link":"#ii-返回结果压缩","children":[{"level":3,"title":"1. 开启gzip压缩","slug":"_1-开启gzip压缩","link":"#_1-开启gzip压缩","children":[]},{"level":3,"title":"2. 返回json对象时最小返回阈值不生效问题","slug":"_2-返回json对象时最小返回阈值不生效问题","link":"#_2-返回json对象时最小返回阈值不生效问题","children":[]},{"level":3,"title":"3. 返回静态资源压缩","slug":"_3-返回静态资源压缩","link":"#_3-返回静态资源压缩","children":[]},{"level":3,"title":"4. 小结","slug":"_4-小结","link":"#_4-小结","children":[]}]},{"level":2,"title":"III. 不能错过的源码和相关知识点","slug":"iii-不能错过的源码和相关知识点","link":"#iii-不能错过的源码和相关知识点","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]}]}],"git":{"createdTime":1703214070000,"updatedTime":1703214070000,"contributors":[{"name":"wuzebang","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":7.89,"words":2368},"filePathRelative":"spring/web/Response/231108-SpringBoot系列之压缩返回结果实例演示.md","localizedDate":"2023年11月8日","excerpt":"<p>本文将介绍一个SpringBoot进阶技巧：压缩返回结果实例演示，旨在提升您的网站访问性能。</p>\\n<p>当返回的数据较大时，网络开销通常不可忽视。为了解决这个问题，我们可以考虑压缩返回的结果，以减少传输的数据量，从而降低网络开销并提高性能。对于依赖Spring生态的Java开发者来说，幸运的是SpringBoot提供了非常便捷的使用方式。</p>\\n<p>接下来，我们将介绍几种不同情况下的压缩返回的使用方式：</p>\\n<ul>\\n<li>直接返回文本：使用text/plain作为响应类型。</li>\\n<li>返回JSON数据：使用application/json作为响应类型。</li>\\n<li>返回静态资源文件：对于静态资源文件，可以使用压缩算法进行压缩后再返回。</li>\\n</ul>\\n","copyright":{},"autoDesc":true}');export{e as data};
