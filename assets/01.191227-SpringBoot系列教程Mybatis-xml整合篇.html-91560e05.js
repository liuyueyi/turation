const t=JSON.parse('{"key":"v-0bd3e865","path":"/spring/db/Mybatis/01.191227-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BMybatis-xml%E6%95%B4%E5%90%88%E7%AF%87.html","title":"1.Mybatis+xml整合篇","lang":"zh-CN","frontmatter":{"order":1,"title":"1.Mybatis+xml整合篇","tag":["Mybatis","DB"],"category":["SpringBoot","DB系列","Mybatis"],"date":"2019-12-27T19:04:46.000Z","keywords":"spring SpringBoot Mybaits MySql xml","description":"MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。 本文将通过实例方式，介绍下如何整合SpringBoot + Mybatis，构建一个支持CRUD的demo工程","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/db/Mybatis/01.191227-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BMybatis-xml%E6%95%B4%E5%90%88%E7%AF%87.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"1.Mybatis+xml整合篇"}],["meta",{"property":"og:description","content":"MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。 本文将通过实例方式，介绍下如何整合SpringBoot + Mybatis，构建一个支持CRUD的demo工程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-03T10:09:21.000Z"}],["meta",{"property":"article:tag","content":"Mybatis"}],["meta",{"property":"article:tag","content":"DB"}],["meta",{"property":"article:published_time","content":"2019-12-27T19:04:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-03T10:09:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.Mybatis+xml整合篇\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-12-27T19:04:46.000Z\\",\\"dateModified\\":\\"2023-02-03T10:09:21.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 环境","slug":"i-环境","link":"#i-环境","children":[{"level":3,"title":"1. 项目搭建","slug":"_1-项目搭建","link":"#_1-项目搭建","children":[]},{"level":3,"title":"2. 配置信息","slug":"_2-配置信息","link":"#_2-配置信息","children":[]}]},{"level":2,"title":"II. 实例整合","slug":"ii-实例整合","link":"#ii-实例整合","children":[{"level":3,"title":"1. PO","slug":"_1-po","link":"#_1-po","children":[]},{"level":3,"title":"2. DAO接口","slug":"_2-dao接口","link":"#_2-dao接口","children":[]},{"level":3,"title":"3. xml实现","slug":"_3-xml实现","link":"#_3-xml实现","children":[]},{"level":3,"title":"4. mybatis配置","slug":"_4-mybatis配置","link":"#_4-mybatis配置","children":[]},{"level":3,"title":"5. 测试","slug":"_5-测试","link":"#_5-测试","children":[]}]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]}]}],"git":{"createdTime":1675418961000,"updatedTime":1675418961000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":6.7,"words":2009},"filePathRelative":"spring/db/Mybatis/01.191227-SpringBoot系列教程Mybatis-xml整合篇.md","localizedDate":"2019年12月27日","excerpt":"<p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p>\\n<p>本文将通过实例方式，介绍下如何整合SpringBoot + Mybatis，构建一个支持CRUD的demo工程</p>\\n","copyright":{},"autoDesc":true}');export{t as data};
