const t=JSON.parse('{"key":"v-43823f56","path":"/java/skill/37.%E6%89%8B%E5%86%99%E5%AE%9A%E9%95%BF%E6%95%B0%E7%BB%84.html","title":"37.手写定长数组","lang":"zh-CN","frontmatter":{"order":37,"title":"37.手写定长数组","tag":["Java"],"category":["Java","其他"],"date":"2018-06-07T19:52:19.000Z","description":"手写定长数组 有个背景场景如下： 一天划分为1440分钟，每分钟记录一个数据块，然后用一个数据结构存储着1440个数据块，随着时间的推移，每过一分钟，向这个数据结构中添加一块，并移除最前的那个；其次就是我希望根据当前的时间，可以获取往前n分钟的数据块 简单来说，上面的需求解析如下： 一个数组，容量为1440 频繁的新增和删除 随机的访问 后面两个就限制了ArrayList和LinkedList的使用场景了，所以为了满足这个场景，然后写了一个简单的数据结构","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/java/skill/37.%E6%89%8B%E5%86%99%E5%AE%9A%E9%95%BF%E6%95%B0%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"37.手写定长数组"}],["meta",{"property":"og:description","content":"手写定长数组 有个背景场景如下： 一天划分为1440分钟，每分钟记录一个数据块，然后用一个数据结构存储着1440个数据块，随着时间的推移，每过一分钟，向这个数据结构中添加一块，并移除最前的那个；其次就是我希望根据当前的时间，可以获取往前n分钟的数据块 简单来说，上面的需求解析如下： 一个数组，容量为1440 频繁的新增和删除 随机的访问 后面两个就限制了ArrayList和LinkedList的使用场景了，所以为了满足这个场景，然后写了一个简单的数据结构"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T10:41:58.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2018-06-07T19:52:19.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-02T10:41:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"37.手写定长数组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-06-07T19:52:19.000Z\\",\\"dateModified\\":\\"2024-08-02T10:41:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 滑动定长数组","slug":"i-滑动定长数组","link":"#i-滑动定长数组","children":[]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"一灰灰Blog： https://liuyueyi.github.io/hexblog","slug":"一灰灰blog-https-liuyueyi-github-io-hexblog","link":"#一灰灰blog-https-liuyueyi-github-io-hexblog","children":[]},{"level":3,"title":"声明","slug":"声明","link":"#声明","children":[]},{"level":3,"title":"扫描关注","slug":"扫描关注","link":"#扫描关注","children":[]}]}],"git":{"createdTime":1722595318000,"updatedTime":1722595318000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":1.72,"words":516},"filePathRelative":"java/skill/37.手写定长数组.md","localizedDate":"2018年6月7日","excerpt":"<h1> 手写定长数组</h1>\\n<p>有个背景场景如下：</p>\\n<p>一天划分为1440分钟，每分钟记录一个数据块，然后用一个数据结构存储着1440个数据块，随着时间的推移，每过一分钟，向这个数据结构中添加一块，并移除最前的那个；其次就是我希望根据当前的时间，可以获取往前n分钟的数据块</p>\\n<p>简单来说，上面的需求解析如下：</p>\\n<ul>\\n<li>一个数组，容量为1440</li>\\n<li>频繁的新增和删除</li>\\n<li>随机的访问</li>\\n</ul>\\n<p>后面两个就限制了ArrayList和LinkedList的使用场景了，所以为了满足这个场景，然后写了一个简单的数据结构</p>","copyright":{},"autoDesc":true}');export{t as data};
