const e=JSON.parse('{"key":"v-13e63f52","path":"/spring/extend/basic/221026-Spring%E6%89%A9%E5%B1%95%E7%82%B9%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89bean%E6%B3%A8%E5%86%8C.html","title":"2.自定义bean注册扩展机制BeanDefinitionRegistryPostProcessor","lang":"zh-CN","frontmatter":{"order":2,"title":"2.自定义bean注册扩展机制BeanDefinitionRegistryPostProcessor","tag":["扩展点","Spring Extention"],"category":["Spring源码","扩展点"],"date":"2022-10-26T14:45:41.000Z","keywords":["SpringBoot","扩展点","BeanDefinitionRegistryPostProcessor"],"description":"接着上一篇容器刷新前的扩展点，我们继续往下走；接下来来到的就是bean的定义扩展处，它是在Spring容器刷新之后，应用的bean定义加载完成、实例化之前提供的切入点，主要是通过实现BeanDefinitionRegistryPostProcessor接口的两个方法，来实现自定义的bean定义，或者对已注册的bean进行修改or代理替换 本文将带来的知识点如下： BeanDefinitionRegistryPostProcessor： 基本使用姿势 postProcessBeanDefinitionRegistry 方法 优先于 postProcessBeanFactory 方法执行 实现自定义的bean注册，实现对容器的bean定义进行修改","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/extend/basic/221026-Spring%E6%89%A9%E5%B1%95%E7%82%B9%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89bean%E6%B3%A8%E5%86%8C.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"2.自定义bean注册扩展机制BeanDefinitionRegistryPostProcessor"}],["meta",{"property":"og:description","content":"接着上一篇容器刷新前的扩展点，我们继续往下走；接下来来到的就是bean的定义扩展处，它是在Spring容器刷新之后，应用的bean定义加载完成、实例化之前提供的切入点，主要是通过实现BeanDefinitionRegistryPostProcessor接口的两个方法，来实现自定义的bean定义，或者对已注册的bean进行修改or代理替换 本文将带来的知识点如下： BeanDefinitionRegistryPostProcessor： 基本使用姿势 postProcessBeanDefinitionRegistry 方法 优先于 postProcessBeanFactory 方法执行 实现自定义的bean注册，实现对容器的bean定义进行修改"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-29T08:58:55.000Z"}],["meta",{"property":"article:tag","content":"扩展点"}],["meta",{"property":"article:tag","content":"Spring Extention"}],["meta",{"property":"article:published_time","content":"2022-10-26T14:45:41.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-29T08:58:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.自定义bean注册扩展机制BeanDefinitionRegistryPostProcessor\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-26T14:45:41.000Z\\",\\"dateModified\\":\\"2024-07-29T08:58:55.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 项目准备","slug":"i-项目准备","link":"#i-项目准备","children":[]},{"level":2,"title":"II. 自定义bean注册","slug":"ii-自定义bean注册","link":"#ii-自定义bean注册","children":[{"level":3,"title":"1. 自定义bean注册","slug":"_1-自定义bean注册","link":"#_1-自定义bean注册","children":[]},{"level":3,"title":"2.bean注册知识点","slug":"_2-bean注册知识点","link":"#_2-bean注册知识点","children":[]},{"level":3,"title":"3. bean定义扩展","slug":"_3-bean定义扩展","link":"#_3-bean定义扩展","children":[]},{"level":3,"title":"4. 小结","slug":"_4-小结","link":"#_4-小结","children":[]}]},{"level":2,"title":"III. 不能错过的源码和相关知识点","slug":"iii-不能错过的源码和相关知识点","link":"#iii-不能错过的源码和相关知识点","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]}]}],"git":{"createdTime":1722243535000,"updatedTime":1722243535000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":8.39,"words":2517},"filePathRelative":"spring/extend/basic/221026-Spring扩展点之自定义bean注册.md","localizedDate":"2022年10月26日","excerpt":"<p>接着上一篇容器刷新前的扩展点，我们继续往下走；接下来来到的就是bean的定义扩展处，它是在Spring容器刷新之后，应用的bean定义加载完成、实例化之前提供的切入点，主要是通过实现<code>BeanDefinitionRegistryPostProcessor</code>接口的两个方法，来实现自定义的bean定义，或者对已注册的bean进行修改or代理替换</p>\\n<p>本文将带来的知识点如下：</p>\\n<ul>\\n<li>BeanDefinitionRegistryPostProcessor： 基本使用姿势</li>\\n<li><code>postProcessBeanDefinitionRegistry</code> 方法 优先于  <code>postProcessBeanFactory</code> 方法执行</li>\\n<li>实现自定义的bean注册，实现对容器的bean定义进行修改</li>\\n</ul>\\n","copyright":{},"autoDesc":true}');export{e as data};
