const e=JSON.parse('{"key":"v-6c930c9e","path":"/column/app/task/180807-Quick-Task-%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC%E6%94%AF%E6%8C%81%E6%A1%86%E6%9E%B6%E4%B9%8BGroovy%E8%84%9A%E6%9C%AC%E5%8A%A0%E8%BD%BD%E6%89%A7%E8%A1%8C.html","title":"5. 动态脚本支持框架之Groovy脚本加载执行","lang":"zh-CN","frontmatter":{"order":5,"title":"5. 动态脚本支持框架之Groovy脚本加载执行","tag":["技术方案"],"category":["Quick系列","QuickTask"],"date":"2018-08-07T22:09:05.000Z","keywords":"Java,QuickTask,开源项目,Groovy","description":"Quick-Task 动态脚本支持框架之Groovy脚本加载执行 上一篇简答说了如何判断有任务动态添加、删除或更新，归于一点就是监听文件的变化，判断目录下的Groovy文件是否有新增删除和改变，从而判定是否有任务的变更； 接下来的问题就比较明显了，当任务变更之后，就需要重新加载任务了，即如何动态的编译并执行Groovy文件呢？ 相关系列博文： 180628-Quick-Task 动态任务执行框架想法篇 180702-Quick-Task 动态脚本支持框架整体介绍篇 180723-Quick-Task 动态脚本支持框架之结构设计篇 180729-Quick-Task 动态脚本支持框架之任务动态加载","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/column/app/task/180807-Quick-Task-%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC%E6%94%AF%E6%8C%81%E6%A1%86%E6%9E%B6%E4%B9%8BGroovy%E8%84%9A%E6%9C%AC%E5%8A%A0%E8%BD%BD%E6%89%A7%E8%A1%8C.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"5. 动态脚本支持框架之Groovy脚本加载执行"}],["meta",{"property":"og:description","content":"Quick-Task 动态脚本支持框架之Groovy脚本加载执行 上一篇简答说了如何判断有任务动态添加、删除或更新，归于一点就是监听文件的变化，判断目录下的Groovy文件是否有新增删除和改变，从而判定是否有任务的变更； 接下来的问题就比较明显了，当任务变更之后，就需要重新加载任务了，即如何动态的编译并执行Groovy文件呢？ 相关系列博文： 180628-Quick-Task 动态任务执行框架想法篇 180702-Quick-Task 动态脚本支持框架整体介绍篇 180723-Quick-Task 动态脚本支持框架之结构设计篇 180729-Quick-Task 动态脚本支持框架之任务动态加载"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T10:41:58.000Z"}],["meta",{"property":"article:tag","content":"技术方案"}],["meta",{"property":"article:published_time","content":"2018-08-07T22:09:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-02T10:41:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. 动态脚本支持框架之Groovy脚本加载执行\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-08-07T22:09:05.000Z\\",\\"dateModified\\":\\"2024-08-02T10:41:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. Groovy文件动态加载","slug":"i-groovy文件动态加载","link":"#i-groovy文件动态加载","children":[{"level":3,"title":"1. 依赖","slug":"_1-依赖","link":"#_1-依赖","children":[]},{"level":3,"title":"2. 加载Groovy","slug":"_2-加载groovy","link":"#_2-加载groovy","children":[]},{"level":3,"title":"3. 调用包装","slug":"_3-调用包装","link":"#_3-调用包装","children":[]},{"level":3,"title":"4. 小结","slug":"_4-小结","link":"#_4-小结","children":[]}]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"0. 相关","slug":"_0-相关","link":"#_0-相关","children":[]},{"level":3,"title":"1. 一灰灰Blog： https://liuyueyi.github.io/hexblog","slug":"_1-一灰灰blog-https-liuyueyi-github-io-hexblog","link":"#_1-一灰灰blog-https-liuyueyi-github-io-hexblog","children":[]},{"level":3,"title":"2. 声明","slug":"_2-声明","link":"#_2-声明","children":[]},{"level":3,"title":"3. 扫描关注","slug":"_3-扫描关注","link":"#_3-扫描关注","children":[]}]}],"git":{"createdTime":1722595318000,"updatedTime":1722595318000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":4.99,"words":1498},"filePathRelative":"column/app/task/180807-Quick-Task-动态脚本支持框架之Groovy脚本加载执行.md","localizedDate":"2018年8月7日","excerpt":"<h1> Quick-Task 动态脚本支持框架之Groovy脚本加载执行</h1>\\n<p>上一篇简答说了如何判断有任务动态添加、删除或更新，归于一点就是监听文件的变化，判断目录下的Groovy文件是否有新增删除和改变，从而判定是否有任务的变更；</p>\\n<p>接下来的问题就比较明显了，当任务变更之后，就需要重新加载任务了，即如何动态的编译并执行Groovy文件呢？</p>\\n<p>相关系列博文：</p>\\n<ul>\\n<li><a href=\\"https://liuyueyi.github.io/hexblog/2018/06/28/180628-%E5%8A%A8%E6%80%81%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6%E6%83%B3%E6%B3%95%E7%AF%87/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">180628-Quick-Task 动态任务执行框架想法篇</a></li>\\n<li><a href=\\"https://blog.hhui.top/hexblog/2018/07/02/180702-QuickTask%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC%E6%94%AF%E6%8C%81%E6%A1%86%E6%9E%B6%E6%95%B4%E4%BD%93%E4%BB%8B%E7%BB%8D%E7%AF%87/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">180702-Quick-Task 动态脚本支持框架整体介绍篇</a></li>\\n<li><a href=\\"https://liuyueyi.github.io/hexblog/2018/07/23/180723-Quick-Task-%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC%E6%94%AF%E6%8C%81%E6%A1%86%E6%9E%B6%E4%B9%8B%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E7%AF%87/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">180723-Quick-Task 动态脚本支持框架之结构设计篇</a></li>\\n<li><a href=\\"https://liuyueyi.github.io/hexblog/2018/07/29/180729-Quick-Task-%E5%8A%A8%E6%80%81%E8%84%9A%E6%9C%AC%E6%94%AF%E6%8C%81%E6%A1%86%E6%9E%B6%E4%B9%8B%E4%BB%BB%E5%8A%A1%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">180729-Quick-Task 动态脚本支持框架之任务动态加载</a></li>\\n</ul>","copyright":{},"autoDesc":true}');export{e as data};
