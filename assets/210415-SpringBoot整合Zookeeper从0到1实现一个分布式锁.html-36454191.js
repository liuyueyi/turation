const e=JSON.parse('{"key":"v-62803ef4","path":"/spring/middle/ZooKeeper/210415-SpringBoot%E6%95%B4%E5%90%88Zookeeper%E4%BB%8E0%E5%88%B01%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html","title":"2.从0到1实现一个分布式锁","lang":"zh-CN","frontmatter":{"order":2,"title":"2.从0到1实现一个分布式锁","tag":["ZooKeeper","分布式锁"],"category":["SpringBoot","中间件","ZooKeeper"],"date":"2021-04-15T20:18:26.000Z","keywords":"ZooKeeper 分布式锁","description":"分布式锁，在实际的业务使用场景中算是比较常用的了，而分布式锁的实现，常见的除了redis之外，就是zk的实现了，前面一篇博文介绍了zk的基本概念与使用姿势，那么如果让我们来记住zk的特性来设计一个分布式锁，可以怎么做呢?","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/middle/ZooKeeper/210415-SpringBoot%E6%95%B4%E5%90%88Zookeeper%E4%BB%8E0%E5%88%B01%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"2.从0到1实现一个分布式锁"}],["meta",{"property":"og:description","content":"分布式锁，在实际的业务使用场景中算是比较常用的了，而分布式锁的实现，常见的除了redis之外，就是zk的实现了，前面一篇博文介绍了zk的基本概念与使用姿势，那么如果让我们来记住zk的特性来设计一个分布式锁，可以怎么做呢?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-10T04:50:05.000Z"}],["meta",{"property":"article:tag","content":"ZooKeeper"}],["meta",{"property":"article:tag","content":"分布式锁"}],["meta",{"property":"article:published_time","content":"2021-04-15T20:18:26.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-10T04:50:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.从0到1实现一个分布式锁\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-15T20:18:26.000Z\\",\\"dateModified\\":\\"2023-02-10T04:50:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"I. 方案设计","slug":"i-方案设计","link":"#i-方案设计","children":[{"level":3,"title":"1. 创建节点方式实现","slug":"_1-创建节点方式实现","link":"#_1-创建节点方式实现","children":[]},{"level":3,"title":"2. 临时顺序节点方式","slug":"_2-临时顺序节点方式","link":"#_2-临时顺序节点方式","children":[]}]},{"level":2,"title":"II.分布式锁实现","slug":"ii-分布式锁实现","link":"#ii-分布式锁实现","children":[{"level":3,"title":"1. 依赖","slug":"_1-依赖","link":"#_1-依赖","children":[]},{"level":3,"title":"2. 简单的分布式锁","slug":"_2-简单的分布式锁","link":"#_2-简单的分布式锁","children":[]},{"level":3,"title":"3. 测试","slug":"_3-测试","link":"#_3-测试","children":[]}]},{"level":2,"title":"II. 其他","slug":"ii-其他","link":"#ii-其他","children":[{"level":3,"title":"0. 项目","slug":"_0-项目","link":"#_0-项目","children":[]}]}],"git":{"createdTime":1676004605000,"updatedTime":1676004605000,"contributors":[{"name":"YiHui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":6.28,"words":1885},"filePathRelative":"spring/middle/ZooKeeper/210415-SpringBoot整合Zookeeper从0到1实现一个分布式锁.md","localizedDate":"2021年4月15日","excerpt":"<p>分布式锁，在实际的业务使用场景中算是比较常用的了，而分布式锁的实现，常见的除了redis之外，就是zk的实现了，前面一篇博文介绍了zk的基本概念与使用姿势，那么如果让我们来记住zk的特性来设计一个分布式锁，可以怎么做呢?</p>\\n","copyright":{},"autoDesc":true}');export{e as data};
